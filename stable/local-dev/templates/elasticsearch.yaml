---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: monitoring

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  namespace: monitoring
rules:
  - apiGroups: [""]
    resources: ["services","endpoints","pods"]
    verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: elasticsearch
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: monitoring

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: elasticsearch
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      serviceAccountName: elasticsearch
      initContainers:
      - name: elasticsearch-init
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: {{ .Values.ElasticsearchImage }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: "docker-cluster"
        - name: NUMBER_OF_MASTERS
          value: "1"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_JAVA_OPTS
          value: -Xms256m -Xmx256m
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        ports:
        - name: transport
          containerPort: 9300
          protocol: TCP
        - name: http
          containerPort: 9200
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 0.25
          limits:
            cpu: 1
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
      - emptyDir:
          medium: ""
        name: storage

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
  namespace: monitoring
spec:
  selector:
    app: elasticsearch
  ports:
  - name: transport
    port: 9300
    targetPort: transport
    protocol: TCP
  - name: http
    port: 9200
    targetPort: http
    protocol: TCP
