---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  labels:
    app: grafana
  namespace: monitoring

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: monitoring

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      containers:
      - name: grafana
        image: {{ .Values.GrafanaHeapsterImage }}
        imagePullPolicy: IfNotPresent
        env:
        - name: INFLUXDB_SERVICE_URL
          value: "http://influxdb:8086"
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          value: /
        ports:
        - name: ui
          containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var
      volumes:
        - name: grafana-persistent-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
  - port: 80
    protocol: TCP
    targetPort: ui
  type: NodePort
